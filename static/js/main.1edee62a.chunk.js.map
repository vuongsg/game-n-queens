{"version":3,"sources":["slices/nQueens-slices.ts","components/NavBar.tsx","producers/nQueensProducer.ts","components/nQueens.tsx","components/About.tsx","App.tsx","reportWebVitals.ts","store.ts","index.tsx"],"names":["useStyles","makeStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","inputRoot","color","inputInput","padding","paddingLeft","transition","transitions","create","width","sectionDesktop","sectionMobile","tooltip","fontSize","letterSpacing","NavBar","classes","React","useState","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleMobileMenuClose","handleMenuClose","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","mobileMenuId","renderMobileMenu","IconButton","to","className","AppBar","position","Toolbar","edge","Typography","variant","noWrap","Tooltip","placement","event","currentTarget","initialState","Array","i","fill","slice","createSlice","name","reducers","changeBoard","state","action","payload","actions","NqueenProducer","board","size","length","result","Set","row","col","add","k","Nqueens","useSelector","nQueens","dispatch","useDispatch","rowsBoard","useRef","initialCurrentTempboard","currentTempBoard","useEffect","current","btnCheckAnswer","document","querySelector","rows","eachQueenEachRow","filter","m","setAttribute","style","cursor","removeAttribute","drawBoard","useCallback","setQueen","e","gridBoard","cellBoard","target","indexOf","tempBoard","parseInt","classList","substr","n","elementsSameRow","getElementsByClassName","cell","backgroundImage","border","window","getComputedStyle","getPropertyValue","process","backgroundSize","from","cellDiv","removeProperty","cells","isWhiteCell","classNames","push","createElement","tabIndex","onMouseDown","rowClassNames","reInitializeBoard","newBoard","Grid","container","direction","item","xs","lg","InputLabel","Select","labelId","value","onChange","marginTop","marginBottom","alignItems","alt","src","disabled","answer","checkBoardValid","alert","cellUI","join","has","delete","justifyContent","About","align","App","history","createBrowserHistory","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","nQueensReducer","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1edee62a.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState: boolean[][] = Array(4);\r\nfor (let i = 0; i < 4; i++) {\r\n    initialState[i] = Array(4).fill(false);\r\n}\r\n\r\nconst slice = createSlice({\r\n    name: 'nQueens',\r\n    initialState: initialState,\r\n    reducers: {\r\n        changeBoard: (state: boolean[][], action: PayloadAction<boolean[][]>) => {\r\n            return action.payload;\r\n        }\r\n    }\r\n})\r\n\r\nexport const { changeBoard } = slice.actions;\r\nexport default slice.reducer;","import React, { ReactElement } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport { Link } from 'react-router-dom';\r\nimport './NavBar.scss'\r\nimport { Tooltip } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n    minWidth: '600px'\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  tooltip: {\r\n    fontSize: '1em',\r\n    letterSpacing: '0.1em'\r\n  }\r\n}));\r\n\r\nexport const NavBar = ():ReactElement => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event: React.MouseEvent<any>): void => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const menuId = 'primary-navbar';\r\n  const renderMenu = (\r\n    <Menu anchorEl={anchorEl} anchorOrigin={{ vertical: 'top', horizontal: 'right' }} id={menuId}\r\n          keepMounted transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n          open={isMenuOpen} onClose={handleMenuClose}>\r\n      <MenuItem onClick={handleMenuClose}>Home page</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>About</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = 'primary-navbar-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu anchorEl={mobileMoreAnchorEl} anchorOrigin={{ vertical: 'top', horizontal: 'right' }} id={mobileMenuId}\r\n          keepMounted transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n          open={isMobileMenuOpen} onClose={handleMobileMenuClose}>\r\n      <MenuItem>\r\n        <IconButton aria-label='Home'>\r\n          <Link to='/'>\r\n            <HomeIcon />\r\n            <h5>Home</h5>\r\n          </Link>\r\n        </IconButton>\r\n      </MenuItem>\r\n\r\n      <MenuItem>\r\n        <IconButton aria-label='About'>\r\n          <Link to='/about'>\r\n            <InfoIcon />\r\n            <h5>About</h5>\r\n          </Link>\r\n        </IconButton>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div id='main-nav-bar' className={classes.grow}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"open drawer\">\r\n          </IconButton>\r\n\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            N Queens\r\n          </Typography>\r\n\r\n          <div className={classes.grow} />\r\n\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton aria-label='Home'>\r\n              <Link to='/'>\r\n                <Tooltip title='Home' placement='bottom' classes={{tooltip: classes.tooltip}}>\r\n                  <HomeIcon />\r\n                </Tooltip>\r\n              </Link>\r\n            </IconButton>\r\n            <IconButton aria-label='About'>\r\n              <Link to='/about'>\r\n                <Tooltip title='About' placement='bottom' classes={{tooltip: classes.tooltip}}>\r\n                  <InfoIcon />\r\n                </Tooltip>\r\n              </Link>\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton aria-label=\"Show more\" aria-controls={mobileMenuId} aria-haspopup=\"true\"\r\n                        onClick={handleMobileMenuOpen} color=\"inherit\">\r\n                <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </div>\r\n  );\r\n}\r\n","export class NqueenProducer {\r\n    static checkBoardValid(board: boolean[][]): Set<string> {\r\n        const size = board.length;\r\n        const result = new Set<string>();\r\n\r\n        for (let row = 0; row < size; row++) {\r\n            for (let col = 0; col < size; col++) {\r\n                if (board[row][col]) {\r\n                    //check above\r\n                    for (let i = row - 1; i >= 0; i--) {\r\n                        if (board[i][col]) {\r\n                            result.add(`row${i} col${col}`);\r\n                            result.add(`row${row} col${col}`);\r\n                        }\r\n                    }\r\n\r\n                    //check left-side\r\n                    for (let k = col - 1; k >= 0; k--) {\r\n                        if (board[row][k]) {\r\n                            result.add(`row${row} col${k}`);\r\n                            result.add(`row${row} col${col}`);\r\n                        }\r\n                    }\r\n                    \r\n                    //check upper-backward slash\r\n                    for (let i = row - 1, k = col - 1; i >= 0 && k >= 0; i--, k--) {\r\n                        if (board[i][k]) {\r\n                            result.add(`row${i} col${k}`);\r\n                            result.add(`row${row} col${col}`);\r\n                        }\r\n                    }\r\n\r\n                    //check upper-forward slash\r\n                    for (let i = row - 1, k = col + 1; i >= 0 && k < size; i--, k++) {\r\n                        if (board[i][k]) {\r\n                            result.add(`row${i} col${k}`);\r\n                            result.add(`row${row} col${col}`);\r\n                            i--;\r\n                            k++;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n}","import React, { ReactElement, useEffect, useRef, useCallback } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Grid, MenuItem, Select, InputLabel } from \"@material-ui/core\";\r\nimport { changeBoard } from \"../slices/nQueens-slices\";\r\nimport { RootType } from \"../store\"; \r\nimport { NqueenProducer } from '../producers/nQueensProducer';\r\nimport './nQueens.scss';\r\n\r\nexport const Nqueens = (): ReactElement => {\r\n    let board = useSelector<RootType>(state => state.nQueens) as boolean[][];   //board state\r\n    const dispatch = useDispatch();\r\n    let initialRowsBoard: ReactElement[] = [];\r\n    const rowsBoard = useRef(initialRowsBoard);     //display UI\r\n    let initialCurrentTempboard = [...board];       //save board state immediately each change\r\n    let currentTempBoard = useRef(initialCurrentTempboard);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(changeBoard(currentTempBoard.current));\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const btnCheckAnswer = document.querySelector('#btn-check-answer') as HTMLButtonElement;\r\n        const rows = board.length;\r\n        const eachQueenEachRow: boolean[] = Array(rows).fill(false);\r\n\r\n        for (let i = 0; i < rows; i++) {\r\n            for (let k = 0; k < rows; k++) {\r\n                if (board[i][k]) {\r\n                    eachQueenEachRow[i] = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (eachQueenEachRow.filter(m => !m).length > 0) {\r\n            btnCheckAnswer.setAttribute('disabled', 'disabled');\r\n            (document.querySelector('#div-fake-check-answer') as HTMLDivElement).style.cursor = 'not-allowed';\r\n        } else {\r\n            btnCheckAnswer.removeAttribute('disabled');\r\n            (document.querySelector('#div-fake-check-answer') as HTMLDivElement).style.cursor = 'auto';\r\n        }\r\n    }, [board]);\r\n\r\n    const drawBoard = useCallback(() => {\r\n        const setQueen = (e:React.MouseEvent<HTMLDivElement>): void => {\r\n            const gridBoard = document.querySelector('#grid-board');\r\n            let cellBoard = e.target as HTMLDivElement;\r\n\r\n            if (gridBoard !== null && cellBoard !== null && cellBoard.className.indexOf('cell-board') !== -1) {\r\n                //set new value for currentTempBoard, check whether each queen each row or not\r\n                const eachQueenEachRow: boolean[] = Array(rows).fill(false);\r\n                const tempBoard = Array(rows);\r\n\r\n                for (let i = 0; i < rows; i++) {\r\n                    tempBoard[i] = Array(rows).fill(false);\r\n\r\n                    for (let k = 0; k < rows; k++) {\r\n                        tempBoard[i][k] = currentTempBoard.current[i][k];\r\n                        if (tempBoard[i][k]) {\r\n                            eachQueenEachRow[i] = true;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                const row = parseInt(cellBoard.classList[0].substr(cellBoard.classList[0].indexOf('row') + 'row'.length));\r\n                const col = parseInt(cellBoard.classList[1].substr(cellBoard.classList[1].indexOf('col') + 'col'.length));\r\n                for (let k = 0, n = currentTempBoard.current.length; k < n; k++) {\r\n                    tempBoard[row][k] = (k === col);\r\n                    if (tempBoard[row][k]) {\r\n                        eachQueenEachRow[row] = true;\r\n                    }\r\n                }\r\n\r\n                currentTempBoard.current = [...tempBoard];\r\n\r\n                const btnCheckAnswer = document.querySelector('#btn-check-answer') as HTMLButtonElement;\r\n\r\n                if (eachQueenEachRow.filter(m => !m).length > 0) {\r\n                    btnCheckAnswer.setAttribute('disabled', 'disabled');\r\n                    (document.querySelector('#div-fake-check-answer') as HTMLDivElement).style.cursor = 'not-allowed';\r\n                } else {\r\n                    btnCheckAnswer.removeAttribute('disabled');\r\n                    (document.querySelector('#div-fake-check-answer') as HTMLDivElement).style.cursor = 'auto';\r\n                }\r\n\r\n                const elementsSameRow = gridBoard.getElementsByClassName(cellBoard.classList[0]);\r\n\r\n                //reset background for all elements in that row\r\n                if (elementsSameRow != null) {\r\n                    for (let i = 0, n = elementsSameRow.length; i < n; i++) {\r\n                        const cell = elementsSameRow[i] as HTMLDivElement;\r\n                        cell.style.backgroundImage = 'none';\r\n                        cell.style.border = 'none';\r\n                    }\r\n                }\r\n    \r\n                if (window.getComputedStyle(cellBoard, null).getPropertyValue('background-color') === 'rgb(255, 255, 255)') {\r\n                    cellBoard.style.backgroundImage = `url('${process.env.PUBLIC_URL + '/img/queen-piece.jpg'}')`;\r\n                } else {\r\n                    cellBoard.style.backgroundImage = `url('${process.env.PUBLIC_URL + '/img/queen-white-piece.jpg'}')`;\r\n                }\r\n    \r\n                cellBoard.style.backgroundSize = 'cover';\r\n            } \r\n        };\r\n        \r\n        currentTempBoard.current = [...board];\r\n        const gridBoard = document.querySelector('#grid-board');\r\n        if (gridBoard !== null) {   //at initialize, gridBoard does not exist\r\n            const rowsCollection = Array.from(document.getElementsByClassName('row-board'));\r\n\r\n            for (let row of rowsCollection) {\r\n                const cellsCollection = Array.from(row.getElementsByClassName('cell-board'));\r\n\r\n                for (let cell of cellsCollection) {\r\n                    const cellDiv = cell as HTMLDivElement;\r\n                    cellDiv.style.backgroundImage = 'none';\r\n                    cellDiv.style.removeProperty('border');\r\n                }\r\n            }\r\n        }\r\n\r\n        const rows = board.length;\r\n        document.title = `Game ${rows} x ${rows} queens`;\r\n        rowsBoard.current = [];\r\n\r\n        for (let i = 0; i < rows; i++) {\r\n            const cells: ReactElement[] = [];\r\n\r\n            for (let k = 0; k < rows; k++) {\r\n                let isWhiteCell = ((k & 1) === 0 && (i & 1) === 0) || ((k & 1) === 1 && (i & 1) === 1);\r\n                const classNames = `row${i} col${k} cell-board ${isWhiteCell ? 'white' : 'black'}`;\r\n\r\n                if (board[i][k]) {\r\n                    cells.push(React.createElement('div', { className: classNames, \r\n                        style: { backgroundImage: classNames.indexOf('white') !== -1 ? `url('${process.env.PUBLIC_URL + '/img/queen-piece.jpg'}')`\r\n                                                                                      : `url('${process.env.PUBLIC_URL + '/img/queen-white-piece.jpg'}')`,\r\n                                backgroundSize: 'cover'}, \r\n                        tabIndex: 0, onMouseDown: setQueen }));\r\n                } else {\r\n                    cells.push(React.createElement('div', { className: classNames, tabIndex: 0, onMouseDown: setQueen }));\r\n                }\r\n            }\r\n\r\n            const rowClassNames = `row-board ${i === 0 ? '' : 'second-more'}`;\r\n            rowsBoard.current.push(React.createElement('div', { className: rowClassNames }, cells));\r\n        }\r\n    }, [board]);\r\n\r\n    /**\r\n     * cbx Size change event\r\n     * @param e \r\n     */\r\n    const changeSize = (e:React.ChangeEvent<{value: unknown}>): void => {\r\n        reInitializeBoard(parseInt(e.target.value as string));\r\n    }\r\n\r\n    const reInitializeBoard = (size: number): void => {\r\n        let newBoard: boolean[][] = Array(size);\r\n        for (let i = 0; i < size; i++) {\r\n            newBoard[i] = Array(size).fill(false);\r\n        }\r\n\r\n        dispatch(changeBoard(newBoard));\r\n    }\r\n\r\n    /**\r\n     * btn 'Check Answer' click event\r\n     * @param e \r\n     * @returns \r\n     */\r\n    const checkAnswer = (e: React.MouseEvent<HTMLDivElement>): void => {\r\n        const btnCheckAnswer = document.querySelector('#btn-check-answer') as HTMLButtonElement;\r\n        if (btnCheckAnswer.disabled) {\r\n            return;\r\n        }\r\n\r\n        //construct new board from current UI\r\n        const gridBoard = document.querySelector('#grid-board');\r\n\r\n        if (gridBoard !== null) {\r\n            const answer = NqueenProducer.checkBoardValid(currentTempBoard.current);\r\n\r\n            if (answer.size === 0) {\r\n                alert('Congratulations! You have an amazing play *__*');\r\n            } else {\r\n                const rowsCollection = Array.from(gridBoard.getElementsByClassName('row-board'));\r\n\r\n                for (let row of rowsCollection) {\r\n                    const cellsCollection = Array.from(row.getElementsByClassName('cell-board'));\r\n\r\n                    for (let cell of cellsCollection) {\r\n                        const cellUI = cell as HTMLDivElement;\r\n                        const classList = [cellUI.classList[0], cellUI.classList[1]].join(' ');\r\n\r\n                        if (answer.has(classList)) {\r\n                            cellUI.style.border = '4px solid red';\r\n                            answer.delete(classList);\r\n                            break;\r\n                        } else {\r\n                            cellUI.style.border = 'none';\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    drawBoard();    //draw board at initialize\r\n\r\n    return (\r\n        <Grid container direction='row'>\r\n            <Grid item xs={12} lg={5} id='select-area'>\r\n                <div>\r\n                    <InputLabel id='label-size'>Choose size</InputLabel>\r\n                    <Select labelId='label-size' value={board.length} onChange={changeSize}>\r\n                        <MenuItem value=\"4\">4 x 4</MenuItem>\r\n                        <MenuItem value=\"6\">6 x 6</MenuItem>\r\n                        <MenuItem value=\"8\">8 x 8</MenuItem>\r\n                        <MenuItem value=\"10\">10 x 10</MenuItem>\r\n                    </Select>\r\n                </div>\r\n\r\n                <Grid container direction='row' style={{ marginTop: 30, marginBottom: 20, alignItems: 'center' }}>\r\n                    <Grid xs={12} lg={3}>\r\n                        <img id='img-queen' alt='' src={process.env.PUBLIC_URL + '/img/queen-piece.jpg'} />\r\n                    </Grid>\r\n                    <Grid xs={12} lg={9}>\r\n                        <p>Pick any cell to set queen. Note that every row, column and diagonal only have one queen.</p>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <div id='div-fake-check-answer' style={{ marginTop: 30, marginBottom: 30, cursor: 'not-allowed' }} onMouseDown={checkAnswer}>\r\n                    <button id='btn-check-answer' className='primary'>Check answer</button>\r\n                </div>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} lg={7} justifyContent='center' id='grid-board'>\r\n                {rowsBoard.current}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","import { ReactElement } from 'react';\r\nimport { Typography } from '@material-ui/core';\r\nimport './About.scss';\r\n\r\nexport const About = (): ReactElement => {\r\n    return (\r\n        <div id='main'>\r\n            <Typography align='left'>\r\n                <p>Welcome to N Queens puzzle</p>\r\n                <p>I'm <i>Vuong Nguyen</i>, the creator. This is a project in my Github repo.</p>\r\n            </Typography>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { NavBar } from './components/NavBar';\nimport { Nqueens } from './components/nQueens';\nimport { About } from './components/About';\nimport './App.scss';\n\nfunction App() {\n  const history = createBrowserHistory();\n  history.push('/');\n\n  return (\n    <Router history={history}>\n      <div className='App'>\n        <NavBar />\n\n        <Switch>\n          <Route path='/about' component={About} />\n          <Route path='/' component={Nqueens} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport nQueensReducer from './slices/nQueens-slices';\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        nQueens: nQueensReducer\r\n    }\r\n});\r\n\r\nexport type RootType = ReturnType<typeof store.getState>;\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}